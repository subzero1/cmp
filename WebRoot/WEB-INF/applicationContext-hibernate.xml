<?xml version="1.0" encoding="UTF-8"?>
<!--
	Application context definition for PSS on Hibernate.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
	<context:property-placeholder location="/WEB-INF/config/jdbc.properties" />
	
	<!-- 自动装载 javaBean -->
	<context:component-scan base-package="com.netsky.base.service.impl,com.netsky.cmp.serviceImpl.form,"/>
	<!-- 自动装载 流程服务 -->
	<context:component-scan base-package="com.netsky.base.flow"/>
	<!-- 自动装载 流程显示服务 -->
	<context:component-scan base-package="com.netsky.base.tree.serviceImpl"/>

	<!--
		Uses Apache Commons DBCP for connection pooling. See Commons DBCP documentation
		for the required JAR files. Alternatively you can use another connection pool
		such as C3P0, similarly configured using Spring.
	-->
		<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}" />	
	<!--  
    <bean id="dataSource"
        class="org.springframework.jndi.JndiObjectFactoryBean">
	    <property name="jndiName">
	        <value>${jndi.name}</value>
	    </property>
 	</bean>
 	-->
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.generate_statistics">
					${hibernate.generate_statistics}
				</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
		<property name="mappingResources">
			<list>
		
			</list>
		</property>
	</bean>
	
		<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
	<bean id="dao" class="com.netsky.base.baseDao.BaseDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 事务注解 -->
	<tx:annotation-driven/>

	<!-- JDBC配置部分 -->
	<bean id = "jdbcSupport" 
         class = "com.netsky.base.baseDao.JdbcSupportImp"> 
         <property name = "dataSource"> 
             <ref local="dataSource"/> 
         </property> 
     </bean> 
</beans>